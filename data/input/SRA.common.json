{
  "xs:schema": {
    "@xmlns:xs": "http://www.w3.org/2001/XMLSchema",
    "@xmlns:com": "SRA.common",
    "@targetNamespace": "SRA.common",
    "xs:complexType": [
      {
        "@name": "ObjectType",
        "xs:sequence": {
          "xs:element": {
            "@maxOccurs": "1",
            "@minOccurs": "0",
            "@name": "IDENTIFIERS",
            "@type": "com:IdentifierType"
          }
        },
        "xs:attribute": [
          {
            "@name": "alias",
            "@type": "xs:string",
            "@use": "optional",
            "xs:annotation": {
              "xs:documentation": "Submitter designated name for the object. The name must be unique within the submission account."
            }
          },
          {
            "@name": "center_name",
            "@type": "xs:string",
            "@use": "optional",
            "xs:annotation": {
              "xs:documentation": "The center name of the submitter."
            }
          },
          {
            "@name": "broker_name",
            "@type": "xs:string",
            "@use": "optional",
            "xs:annotation": {
              "xs:documentation": "The center name of the broker."
            }
          },
          {
            "@name": "accession",
            "@type": "xs:string",
            "@use": "optional",
            "xs:annotation": {
              "xs:documentation": "The object accession assigned by the archive."
            }
          }
        ]
      },
      {
        "@name": "RefObjectType",
        "xs:sequence": {
          "xs:element": {
            "@maxOccurs": "1",
            "@minOccurs": "0",
            "@name": "IDENTIFIERS",
            "@type": "com:IdentifierType"
          }
        },
        "xs:attribute": [
          {
            "@name": "refname",
            "@type": "xs:string",
            "@use": "optional",
            "xs:annotation": {
              "xs:documentation": "Identifies an object by name within the namespace defined by attribute \"refcenter\"."
            }
          },
          {
            "@name": "refcenter",
            "@type": "xs:string",
            "@use": "optional",
            "xs:annotation": {
              "xs:documentation": "The namespace of the attribute \"refname\"."
            }
          },
          {
            "@name": "accession",
            "@type": "xs:string",
            "@use": "optional",
            "xs:annotation": {
              "xs:documentation": "Identifies a record by its accession.  The scope of resolution is the entire Archive."
            }
          }
        ]
      },
      {
        "@name": "NameType",
        "xs:simpleContent": {
          "xs:extension": {
            "@base": "xs:string",
            "xs:attribute": {
              "@name": "label",
              "@use": "optional",
              "@type": "xs:string",
              "xs:annotation": {
                "xs:documentation": "Alternative/explanatory description of the same object/identifier."
              }
            }
          }
        }
      },
      {
        "@name": "QualifiedNameType",
        "xs:simpleContent": {
          "xs:extension": {
            "@base": "com:NameType",
            "xs:attribute": {
              "@name": "namespace",
              "@use": "required",
              "@type": "xs:string",
              "xs:annotation": {
                "xs:documentation": "A string value that constrains the domain of named\n                            identifiers (namespace)."
              }
            }
          }
        }
      },
      {
        "@name": "IdentifierType",
        "xs:annotation": {
          "xs:documentation": "Set of record identifiers."
        },
        "xs:sequence": {
          "xs:element": [
            {
              "@name": "PRIMARY_ID",
              "@type": "com:NameType",
              "@minOccurs": "0",
              "@maxOccurs": "1",
              "xs:annotation": {
                "xs:documentation": "A primary identifier in the INSDC namespace."
              }
            },
            {
              "@name": "SECONDARY_ID",
              "@type": "com:NameType",
              "@minOccurs": "0",
              "@maxOccurs": "unbounded",
              "xs:annotation": {
                "xs:documentation": "A secondary identifier in the INSDC namespace."
              }
            },
            {
              "@name": "EXTERNAL_ID",
              "@type": "com:QualifiedNameType",
              "@minOccurs": "0",
              "@maxOccurs": "unbounded",
              "xs:annotation": {
                "xs:documentation": "An identifer rom a public non-INSDC resource."
              }
            },
            {
              "@name": "SUBMITTER_ID",
              "@type": "com:QualifiedNameType",
              "@minOccurs": "0",
              "@maxOccurs": "1",
              "xs:annotation": {
                "xs:documentation": "A submitter provided identifier."
              }
            },
            {
              "@name": "UUID",
              "@type": "com:NameType",
              "@minOccurs": "0",
              "@maxOccurs": "unbounded",
              "xs:annotation": {
                "xs:documentation": "A universally unique identifier that requires no namespace."
              }
            }
          ]
        }
      },
      {
        "@name": "XRefType",
        "xs:all": {
          "xs:element": [
            {
              "@name": "DB",
              "@type": "xs:string",
              "@minOccurs": "1",
              "@maxOccurs": "1",
              "xs:annotation": {
                "xs:documentation": "INSDC controlled vocabulary of permitted cross references.\n                        Please see http://www.insdc.org/db_xref.html . For example, FLYBASE."
              }
            },
            {
              "@name": "ID",
              "@minOccurs": "1",
              "@maxOccurs": "1",
              "@type": "xs:string",
              "xs:annotation": {
                "xs:documentation": "Accession in the referenced database.    For example,  FBtr0080008 (in FLYBASE)."
              }
            },
            {
              "@name": "LABEL",
              "@type": "xs:string",
              "@minOccurs": "0",
              "@maxOccurs": "1",
              "xs:annotation": {
                "xs:documentation": "Text label to display for the link."
              }
            }
          ]
        }
      },
      {
        "@name": "URLType",
        "xs:all": {
          "xs:element": [
            {
              "@name": "LABEL",
              "@type": "xs:string",
              "@minOccurs": "1",
              "@maxOccurs": "1",
              "xs:annotation": {
                "xs:documentation": "Text label to display for the link."
              }
            },
            {
              "@name": "URL",
              "@minOccurs": "1",
              "@maxOccurs": "1",
              "@type": "xs:anyURI",
              "xs:annotation": {
                "xs:documentation": "The internet service link (file:, http:, ftp:, etc)."
              }
            }
          ]
        }
      },
      {
        "@name": "AttributeType",
        "xs:annotation": {
          "xs:documentation": "Reusable attributes to encode tag-value pairs with optional units."
        },
        "xs:all": {
          "xs:element": [
            {
              "@name": "TAG",
              "@type": "xs:string",
              "@minOccurs": "1",
              "@maxOccurs": "1",
              "xs:annotation": {
                "xs:documentation": "Name of the attribute."
              }
            },
            {
              "@name": "VALUE",
              "@type": "xs:string",
              "@minOccurs": "0",
              "@maxOccurs": "1",
              "xs:annotation": {
                "xs:documentation": "Value of the attribute."
              }
            },
            {
              "@name": "UNITS",
              "@type": "xs:string",
              "@minOccurs": "0",
              "@maxOccurs": "1",
              "xs:annotation": {
                "xs:documentation": "Optional scientific units."
              }
            }
          ]
        }
      },
      {
        "@name": "LinkType",
        "xs:annotation": {
          "xs:documentation": "Reusable external links type to encode URL links, Entrez links, and db_xref links."
        },
        "xs:choice": {
          "xs:element": [
            {
              "@name": "URL_LINK",
              "xs:complexType": {
                "xs:all": {
                  "xs:element": [
                    {
                      "@name": "LABEL",
                      "@type": "xs:string",
                      "@minOccurs": "1",
                      "@maxOccurs": "1",
                      "xs:annotation": {
                        "xs:documentation": "Text label to display for the link."
                      }
                    },
                    {
                      "@name": "URL",
                      "@minOccurs": "1",
                      "@maxOccurs": "1",
                      "@type": "xs:anyURI",
                      "xs:annotation": {
                        "xs:documentation": "The internet service link (file:, http:, ftp: etc)."
                      }
                    }
                  ]
                }
              }
            },
            {
              "@name": "XREF_LINK",
              "@type": "com:XRefType"
            },
            {
              "@name": "ENTREZ_LINK",
              "xs:complexType": {
                "xs:sequence": {
                  "xs:element": [
                    {
                      "@name": "DB",
                      "@type": "xs:string",
                      "@minOccurs": "1",
                      "@maxOccurs": "1",
                      "xs:annotation": {
                        "xs:documentation": "NCBI controlled vocabulary of permitted cross references.  Please see http://www.ncbi.nlm.nih.gov/entrez/eutils/einfo.fcgi? ."
                      }
                    },
                    {
                      "@name": "LABEL",
                      "@type": "xs:string",
                      "@minOccurs": "0",
                      "@maxOccurs": "1",
                      "xs:annotation": {
                        "xs:documentation": "How to label the link."
                      }
                    }
                  ],
                  "xs:choice": {
                    "xs:element": [
                      {
                        "@name": "ID",
                        "@type": "xs:nonNegativeInteger",
                        "@minOccurs": "1",
                        "@maxOccurs": "1",
                        "xs:annotation": {
                          "xs:documentation": "Numeric record id meaningful to the NCBI Entrez system."
                        }
                      },
                      {
                        "@name": "QUERY",
                        "@type": "xs:string",
                        "@minOccurs": "1",
                        "@maxOccurs": "1",
                        "xs:annotation": {
                          "xs:documentation": "Accession string meaningful to the NCBI Entrez system."
                        }
                      }
                    ]
                  }
                }
              }
            }
          ]
        }
      },
      {
        "@name": "SpotDescriptorType",
        "xs:annotation": {
          "xs:documentation": "The SPOT_DESCRIPTOR specifies how to decode the individual reads of interest from the \n                    monolithic spot sequence.  The spot descriptor contains aspects of the experimental design, \n                    platform, and processing information.  There will be two methods of specification: one \n                    will be an index into a table of typical decodings, the other being an exact specification."
        },
        "xs:choice": {
          "xs:element": {
            "@name": "SPOT_DECODE_SPEC",
            "xs:complexType": {
              "xs:sequence": {
                "xs:element": [
                  {
                    "@name": "SPOT_LENGTH",
                    "@type": "xs:nonNegativeInteger",
                    "@minOccurs": "0",
                    "@maxOccurs": "1",
                    "xs:annotation": {
                      "xs:documentation": "Number of base/color calls, cycles, or flows per\n                                    spot (raw sequence length or flow length including all\n                                    application and technical tags and mate pairs, but not including\n                                    gap lengths). This value will be platform dependent, library\n                                    dependent, and possibly run dependent. Variable length platforms\n                                    will still have a constant flow/cycle length."
                    }
                  },
                  {
                    "@name": "READ_SPEC",
                    "@minOccurs": "1",
                    "@maxOccurs": "unbounded",
                    "xs:complexType": {
                      "xs:sequence": {
                        "xs:element": [
                          {
                            "@name": "READ_INDEX",
                            "@type": "xs:nonNegativeInteger",
                            "@nillable": "false",
                            "xs:annotation": {
                              "xs:documentation": "READ_INDEX starts at 0 and is incrementally increased for each sequential READ_SPEC within a SPOT_DECODE_SPEC"
                            }
                          },
                          {
                            "@name": "READ_LABEL",
                            "@type": "xs:string",
                            "@minOccurs": "0",
                            "@maxOccurs": "1",
                            "xs:annotation": {
                              "xs:documentation": "READ_LABEL is a name for this tag, and can be used to on output to determine read name, for example F or R."
                            }
                          },
                          {
                            "@name": "READ_CLASS",
                            "xs:simpleType": {
                              "xs:restriction": {
                                "@base": "xs:string",
                                "xs:enumeration": [
                                  {
                                    "@value": "Application Read"
                                  },
                                  {
                                    "@value": "Technical Read"
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "@name": "READ_TYPE",
                            "@default": "Forward",
                            "xs:simpleType": {
                              "xs:restriction": {
                                "@base": "xs:string",
                                "xs:enumeration": [
                                  {
                                    "@value": "Forward"
                                  },
                                  {
                                    "@value": "Reverse"
                                  },
                                  {
                                    "@value": "Adapter"
                                  },
                                  {
                                    "@value": "Primer"
                                  },
                                  {
                                    "@value": "Linker"
                                  },
                                  {
                                    "@value": "BarCode"
                                  },
                                  {
                                    "@value": "Other"
                                  }
                                ]
                              }
                            }
                          }
                        ],
                        "xs:choice": {
                          "xs:annotation": {
                            "xs:documentation": "There are various methods to ordering the reads on the spot."
                          },
                          "xs:element": [
                            {
                              "@name": "RELATIVE_ORDER",
                              "xs:annotation": {
                                "xs:documentation": "The read is located beginning at the offset or cycle relative to another read.  \n                                                        This choice is appropriate for example when specifying a read\n                                                        that follows a variable length expected sequence(s)."
                              },
                              "xs:complexType": {
                                "xs:attribute": [
                                  {
                                    "@name": "follows_read_index",
                                    "@type": "xs:nonNegativeInteger",
                                    "@use": "optional",
                                    "xs:annotation": {
                                      "xs:documentation": "Specify the read index that precedes this read."
                                    }
                                  },
                                  {
                                    "@name": "precedes_read_index",
                                    "@type": "xs:nonNegativeInteger",
                                    "@use": "optional",
                                    "xs:annotation": {
                                      "xs:documentation": "Specify the read index that follows this read."
                                    }
                                  }
                                ]
                              }
                            },
                            {
                              "@name": "BASE_COORD",
                              "@type": "xs:integer",
                              "xs:annotation": {
                                "xs:documentation": "The location of the read start in terms of base count (1 is beginning of spot)."
                              }
                            },
                            {
                              "@name": "EXPECTED_BASECALL_TABLE",
                              "xs:annotation": {
                                "xs:documentation": "A set of choices of expected basecalls for a current read. Read will be zero-length if none is found."
                              },
                              "xs:complexType": {
                                "xs:sequence": {
                                  "@minOccurs": "1",
                                  "@maxOccurs": "1",
                                  "xs:element": {
                                    "@name": "BASECALL",
                                    "@maxOccurs": "unbounded",
                                    "xs:annotation": {
                                      "xs:documentation": "Element's body contains a basecall, attribute provide description of this read meaning as well as matching rules."
                                    },
                                    "xs:complexType": {
                                      "xs:simpleContent": {
                                        "xs:extension": {
                                          "@base": "xs:string",
                                          "xs:attribute": [
                                            {
                                              "@name": "read_group_tag",
                                              "@type": "xs:string",
                                              "@use": "optional",
                                              "xs:annotation": {
                                                "xs:documentation": "When match occurs, the read will be tagged with this group membership"
                                              }
                                            },
                                            {
                                              "@name": "min_match",
                                              "@type": "xs:nonNegativeInteger",
                                              "@use": "optional",
                                              "xs:annotation": {
                                                "xs:documentation": "Minimum number of matches to trigger identification."
                                              }
                                            },
                                            {
                                              "@name": "max_mismatch",
                                              "@type": "xs:nonNegativeInteger",
                                              "@use": "optional",
                                              "xs:annotation": {
                                                "xs:documentation": "Maximum number of mismatches"
                                              }
                                            },
                                            {
                                              "@name": "match_edge",
                                              "xs:annotation": {
                                                "xs:documentation": "Where the match should occur. Changes the rules on how min_match and max_mismatch are counted."
                                              },
                                              "xs:simpleType": {
                                                "xs:restriction": {
                                                  "@base": "xs:string",
                                                  "xs:enumeration": [
                                                    {
                                                      "@value": "full",
                                                      "xs:annotation": {
                                                        "xs:documentation": "Only @max_mismatch influences matching process"
                                                      }
                                                    },
                                                    {
                                                      "@value": "start",
                                                      "xs:annotation": {
                                                        "xs:documentation": "Both matches and mismatches are counted. \n                                                       When @max_mismatch is exceeded - it is not a match.\n                                                       When @min_match is reached - match is declared."
                                                      }
                                                    },
                                                    {
                                                      "@value": "end",
                                                      "xs:annotation": {
                                                        "xs:documentation": "Both matches and mismatches are counted. \n                                                       When @max_mismatch is exceeded - it is not a match.\n                                                       When @min_match is reached - match is declared."
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                },
                                "xs:attribute": [
                                  {
                                    "@name": "default_length",
                                    "@type": "xs:nonNegativeInteger",
                                    "@use": "optional",
                                    "xs:annotation": {
                                      "xs:documentation": "Specify whether the spot should have a default length for this tag if the expected base cannot be matched."
                                    }
                                  },
                                  {
                                    "@name": "base_coord",
                                    "@type": "xs:nonNegativeInteger",
                                    "@use": "optional",
                                    "xs:annotation": {
                                      "xs:documentation": "Specify an optional starting point for tag (base offset from 1)."
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      },
      {
        "@name": "PlatformType",
        "xs:annotation": {
          "xs:documentation": "The PLATFORM record selects which sequencing platform and platform-specific runtime parameters. This will be\n        determined by the Center."
        },
        "xs:choice": {
          "xs:element": [
            {
              "@name": "LS454",
              "xs:annotation": {
                "xs:documentation": "454 technology use 1-color sequential flows"
              },
              "xs:complexType": {
                "xs:sequence": {
                  "xs:element": {
                    "@name": "INSTRUMENT_MODEL",
                    "@maxOccurs": "1",
                    "@minOccurs": "1",
                    "@type": "com:type454Model"
                  }
                }
              }
            },
            {
              "@name": "ILLUMINA",
              "xs:annotation": {
                "xs:documentation": "Illumina is 4-channel flowgram with 1-to-1 mapping between basecalls and flows"
              },
              "xs:complexType": {
                "xs:sequence": {
                  "xs:element": {
                    "@name": "INSTRUMENT_MODEL",
                    "@maxOccurs": "1",
                    "@minOccurs": "1",
                    "@type": "com:typeIlluminaModel"
                  }
                }
              }
            },
            {
              "@name": "HELICOS",
              "xs:annotation": {
                "xs:documentation": "Helicos is similar to 454 technology - uses 1-color sequential flows"
              },
              "xs:complexType": {
                "xs:sequence": {
                  "xs:element": {
                    "@name": "INSTRUMENT_MODEL",
                    "@maxOccurs": "1",
                    "@minOccurs": "1",
                    "@type": "com:typeHelicosModel"
                  }
                }
              }
            },
            {
              "@name": "ABI_SOLID",
              "xs:annotation": {
                "xs:documentation": "ABI is 4-channel flowgram with 1-to-1 mapping between basecalls and flows"
              },
              "xs:complexType": {
                "xs:sequence": {
                  "xs:element": {
                    "@name": "INSTRUMENT_MODEL",
                    "@maxOccurs": "1",
                    "@minOccurs": "1",
                    "@type": "com:typeAbiSolidModel"
                  }
                }
              }
            },
            {
              "@name": "COMPLETE_GENOMICS",
              "xs:annotation": {
                "xs:documentation": "CompleteGenomics platform type. At present there is no instrument model."
              },
              "xs:complexType": {
                "xs:sequence": {
                  "xs:element": {
                    "@name": "INSTRUMENT_MODEL",
                    "@maxOccurs": "1",
                    "@minOccurs": "1",
                    "@type": "com:typeCGModel"
                  }
                }
              }
            },
            {
              "@name": "BGISEQ",
              "xs:annotation": {
                "xs:documentation": null
              },
              "xs:complexType": {
                "xs:sequence": {
                  "xs:element": {
                    "@name": "INSTRUMENT_MODEL",
                    "@maxOccurs": "1",
                    "@minOccurs": "1",
                    "@type": "com:typeBGISEQModel"
                  }
                }
              }
            },
            {
              "@name": "OXFORD_NANOPORE",
              "xs:annotation": {
                "xs:documentation": "Oxford Nanopore platform type. nanopore-based electronic single molecule analysis"
              },
              "xs:complexType": {
                "xs:sequence": {
                  "xs:element": {
                    "@name": "INSTRUMENT_MODEL",
                    "@maxOccurs": "1",
                    "@minOccurs": "1",
                    "@type": "com:typeOxfordNanoporeModel"
                  }
                }
              }
            },
            {
              "@name": "PACBIO_SMRT",
              "xs:annotation": {
                "xs:documentation": "PacificBiosciences platform type for the single molecule real time (SMRT) technology."
              },
              "xs:complexType": {
                "xs:sequence": {
                  "xs:element": {
                    "@name": "INSTRUMENT_MODEL",
                    "@maxOccurs": "1",
                    "@minOccurs": "1",
                    "@type": "com:typePacBioModel"
                  }
                }
              }
            },
            {
              "@name": "ION_TORRENT",
              "xs:annotation": {
                "xs:documentation": "Ion Torrent Personal Genome Machine (PGM) from Life Technologies."
              },
              "xs:complexType": {
                "xs:sequence": {
                  "xs:element": {
                    "@name": "INSTRUMENT_MODEL",
                    "@maxOccurs": "1",
                    "@minOccurs": "1",
                    "@type": "com:typeIontorrentModel"
                  }
                }
              }
            },
            {
              "@name": "CAPILLARY",
              "xs:annotation": {
                "xs:documentation": "Sequencers based on capillary electrophoresis technology manufactured by LifeTech (formerly Applied\n                BioSciences)."
              },
              "xs:complexType": {
                "xs:sequence": {
                  "xs:element": {
                    "@name": "INSTRUMENT_MODEL",
                    "@maxOccurs": "1",
                    "@minOccurs": "1",
                    "@type": "com:typeCapillaryModel"
                  }
                }
              }
            },
            {
              "@name": "DNBSEQ",
              "xs:annotation": {
                "xs:documentation": "Sequencers based on DNBSEQ by MGI Tech."
              },
              "xs:complexType": {
                "xs:sequence": {
                  "xs:element": {
                    "@name": "INSTRUMENT_MODEL",
                    "@maxOccurs": "1",
                    "@minOccurs": "1",
                    "@type": "com:typeDnbSeqModel"
                  }
                }
              }
            },
            {
              "@name": "ELEMENT",
              "xs:complexType": {
                "xs:sequence": {
                  "xs:element": {
                    "@name": "INSTRUMENT_MODEL",
                    "@maxOccurs": "1",
                    "@minOccurs": "1",
                    "@type": "com:typeElementModel"
                  }
                }
              }
            },
            {
              "@name": "ULTIMA",
              "xs:complexType": {
                "xs:sequence": {
                  "xs:element": {
                    "@name": "INSTRUMENT_MODEL",
                    "@maxOccurs": "1",
                    "@minOccurs": "1",
                    "@type": "com:typeUltimaModel"
                  }
                }
              }
            }
          ]
        }
      },
      {
        "@name": "SequencingDirectivesType",
        "xs:all": {
          "xs:element": {
            "@name": "SAMPLE_DEMUX_DIRECTIVE",
            "@minOccurs": "0",
            "@maxOccurs": "1",
            "xs:annotation": {
              "xs:documentation": "Tells the Archive who will execute the sample demultiplexing operation.."
            },
            "xs:simpleType": {
              "xs:restriction": {
                "@base": "xs:string",
                "xs:enumeration": [
                  {
                    "@value": "leave_as_pool",
                    "xs:annotation": {
                      "xs:documentation": "There shall be no sample de-multiplexing at the level of assiging individual reads to sample pool members."
                    }
                  },
                  {
                    "@value": "submitter_demultiplexed",
                    "xs:annotation": {
                      "xs:documentation": "The submitter has assigned individual reads to sample pool members by providing individual files \n                                    containing reads with the same member assignment."
                    }
                  }
                ]
              }
            }
          }
        }
      },
      {
        "@name": "PipelineType",
        "xs:annotation": {
          "xs:documentation": "The PipelineType identifies the sequence or tree of actions to\n                process the sequencing data."
        },
        "xs:sequence": {
          "@minOccurs": "1",
          "@maxOccurs": "1",
          "xs:element": {
            "@name": "PIPE_SECTION",
            "@minOccurs": "1",
            "@maxOccurs": "unbounded",
            "xs:complexType": {
              "xs:sequence": {
                "xs:element": [
                  {
                    "@name": "STEP_INDEX",
                    "@type": "xs:string",
                    "xs:annotation": {
                      "xs:documentation": "Lexically ordered  value that allows for the pipe section to be hierarchically ordered.  The float primitive data type is\n                                    used to allow for pipe sections to be inserted later on."
                    }
                  },
                  {
                    "@name": "PREV_STEP_INDEX",
                    "@type": "xs:string",
                    "@nillable": "true",
                    "@minOccurs": "1",
                    "@maxOccurs": "unbounded",
                    "xs:annotation": {
                      "xs:documentation": "STEP_INDEX of the previous step in the workflow.  Set toNIL if the first pipe section."
                    }
                  },
                  {
                    "@name": "PROGRAM",
                    "@type": "xs:string",
                    "xs:annotation": {
                      "xs:documentation": "Name of the program or process for primary analysis.   This may include a test or condition\n                                    that leads to branching in the workflow."
                    }
                  },
                  {
                    "@name": "VERSION",
                    "@type": "xs:string",
                    "xs:annotation": {
                      "xs:documentation": "Version of the program or process for primary analysis."
                    }
                  },
                  {
                    "@name": "NOTES",
                    "@type": "xs:string",
                    "@maxOccurs": "1",
                    "@minOccurs": "0",
                    "xs:annotation": {
                      "xs:documentation": "Notes about the program or process for primary analysis."
                    }
                  }
                ]
              },
              "xs:attribute": {
                "@name": "section_name",
                "@type": "xs:string",
                "@use": "optional",
                "xs:annotation": {
                  "xs:documentation": "Name of the processing pipeline section."
                }
              }
            }
          }
        }
      },
      {
        "@name": "ReferenceAssemblyType",
        "xs:annotation": {
          "xs:documentation": "Reference assembly details."
        },
        "xs:choice": {
          "xs:element": [
            {
              "@name": "STANDARD",
              "xs:annotation": {
                "xs:documentation": "A standard genome assembly."
              },
              "xs:complexType": {
                "xs:attribute": [
                  {
                    "@name": "refname",
                    "@type": "xs:string",
                    "@use": "optional",
                    "xs:annotation": {
                      "xs:documentation": "A recognized name for the genome assembly."
                    }
                  },
                  {
                    "@name": "accession",
                    "@type": "xs:token",
                    "xs:annotation": {
                      "xs:documentation": "Identifies the genome assembly\n                                using an accession number and a sequence version."
                    }
                  }
                ]
              }
            },
            {
              "@name": "CUSTOM",
              "xs:annotation": {
                "xs:documentation": "Other genome assembly."
              },
              "xs:complexType": {
                "xs:sequence": {
                  "xs:element": [
                    {
                      "@maxOccurs": "1",
                      "@minOccurs": "0",
                      "@name": "DESCRIPTION",
                      "@type": "xs:string",
                      "xs:annotation": {
                        "xs:documentation": "Description of the genome\n                                                 assembly."
                      }
                    },
                    {
                      "@maxOccurs": "unbounded",
                      "@name": "URL_LINK",
                      "xs:annotation": {
                        "xs:documentation": "A link to the genome\n                                                 assembly."
                      },
                      "xs:complexType": {
                        "xs:all": {
                          "xs:element": [
                            {
                              "@maxOccurs": "1",
                              "@minOccurs": "0",
                              "@name": "LABEL",
                              "@type": "xs:string",
                              "xs:annotation": {
                                "xs:documentation": "Text label to display for the\n                                                 link."
                              }
                            },
                            {
                              "@maxOccurs": "1",
                              "@minOccurs": "1",
                              "@name": "URL",
                              "@type": "xs:anyURI",
                              "xs:annotation": {
                                "xs:documentation": "The internet service link\n                                                 (file:, http:, ftp:, etc)."
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          ]
        }
      },
      {
        "@name": "ReferenceSequenceType",
        "xs:annotation": {
          "xs:documentation": "Reference assembly and sequence details."
        },
        "xs:sequence": {
          "xs:element": [
            {
              "@minOccurs": "0",
              "@name": "ASSEMBLY",
              "@type": "com:ReferenceAssemblyType",
              "xs:annotation": {
                "xs:documentation": "Reference assembly details."
              }
            },
            {
              "@minOccurs": "0",
              "@maxOccurs": "unbounded",
              "@name": "SEQUENCE",
              "xs:annotation": {
                "xs:documentation": "Reference sequence details."
              },
              "xs:complexType": {
                "xs:attribute": [
                  {
                    "@name": "refname",
                    "@type": "xs:string",
                    "@use": "optional",
                    "xs:annotation": {
                      "xs:documentation": "A recognized name for the\n                                                 reference sequence."
                    }
                  },
                  {
                    "@name": "accession",
                    "@type": "xs:token",
                    "xs:annotation": {
                      "xs:documentation": "Accession.version with version being mandatory"
                    }
                  },
                  {
                    "@name": "label",
                    "@type": "xs:string",
                    "@use": "optional",
                    "xs:annotation": {
                      "xs:documentation": "This is how Reference Sequence is labeled in submission file(s). \n                                  It is equivalent to  SQ label in BAM. \n                                  Optional when submitted file uses INSDC accession.version"
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      {
        "@name": "ProcessingType",
        "xs:sequence": {
          "xs:element": [
            {
              "@name": "PIPELINE",
              "@type": "com:PipelineType",
              "@minOccurs": "0",
              "@maxOccurs": "1",
              "xs:annotation": {
                "xs:documentation": "Generic processing pipeline specification."
              }
            },
            {
              "@name": "DIRECTIVES",
              "@type": "com:SequencingDirectivesType",
              "@minOccurs": "0",
              "@maxOccurs": "1",
              "xs:annotation": {
                "xs:documentation": "Processing directives tell the Sequence Read Archive how to\n                        treat the input data, if any treatment is requested."
              }
            }
          ]
        }
      }
    ],
    "xs:attributeGroup": [
      {
        "@name": "NameGroup",
        "xs:attribute": [
          {
            "@name": "alias",
            "@type": "xs:string",
            "@use": "optional",
            "xs:annotation": {
              "xs:documentation": "Submitter designated name of the SRA document of this type.  At minimum alias should\n                    be unique throughout the submission of this document type.  If center_name is specified, the name should\n                    be unique in all submissions from that center of this document type."
            }
          },
          {
            "@name": "center_name",
            "@type": "xs:string",
            "@use": "optional",
            "xs:annotation": {
              "xs:documentation": "Owner authority of this document and namespace for submitter's name of this document. \n                    If not provided, then the submitter is regarded as \"Individual\" and document resolution\n                    can only happen within the submission."
            }
          },
          {
            "@name": "broker_name",
            "@type": "xs:string",
            "@use": "optional",
            "xs:annotation": {
              "xs:documentation": "Broker authority of this document.  If not provided, then the broker is considered \"direct\"."
            }
          },
          {
            "@name": "accession",
            "@type": "xs:string",
            "@use": "optional",
            "xs:annotation": {
              "xs:documentation": "The document's accession as assigned by the Home Archive."
            }
          }
        ]
      },
      {
        "@name": "RefNameGroup",
        "xs:attribute": [
          {
            "@name": "refname",
            "@type": "xs:string",
            "@use": "optional",
            "xs:annotation": {
              "xs:documentation": "Identifies a record by name that is known within the namespace defined by attribute \"refcenter\"\n                    Use this field when referencing an object for which an accession has not yet been issued."
            }
          },
          {
            "@name": "refcenter",
            "@type": "xs:string",
            "@use": "optional",
            "xs:annotation": {
              "xs:documentation": "The center namespace of the attribute \"refname\". When absent, the namespace is assumed to be the current submission."
            }
          },
          {
            "@name": "accession",
            "@type": "xs:string",
            "@use": "optional",
            "xs:annotation": {
              "xs:documentation": "Identifies a record by its accession.  The scope of resolution is the entire Archive."
            }
          }
        ]
      }
    ],
    "xs:simpleType": [
      {
        "@name": "type454Model",
        "xs:restriction": {
          "@base": "xs:string",
          "xs:enumeration": [
            {
              "@value": "454 GS"
            },
            {
              "@value": "454 GS 20"
            },
            {
              "@value": "454 GS FLX"
            },
            {
              "@value": "454 GS FLX+"
            },
            {
              "@value": "454 GS FLX Titanium"
            },
            {
              "@value": "454 GS Junior"
            },
            {
              "@value": "unspecified"
            }
          ]
        }
      },
      {
        "@name": "typeIlluminaModel",
        "xs:restriction": {
          "@base": "xs:string",
          "xs:enumeration": [
            {
              "@value": "HiSeq X Five"
            },
            {
              "@value": "HiSeq X Ten"
            },
            {
              "@value": "Illumina Genome Analyzer"
            },
            {
              "@value": "Illumina Genome Analyzer II"
            },
            {
              "@value": "Illumina Genome Analyzer IIx"
            },
            {
              "@value": "Illumina HiScanSQ"
            },
            {
              "@value": "Illumina HiSeq 1000"
            },
            {
              "@value": "Illumina HiSeq 1500"
            },
            {
              "@value": "Illumina HiSeq 2000"
            },
            {
              "@value": "Illumina HiSeq 2500"
            },
            {
              "@value": "Illumina HiSeq 3000"
            },
            {
              "@value": "Illumina HiSeq 4000"
            },
            {
              "@value": "Illumina HiSeq X"
            },
            {
              "@value": "Illumina iSeq 100"
            },
            {
              "@value": "Illumina MiSeq"
            },
            {
              "@value": "Illumina MiniSeq"
            },
            {
              "@value": "Illumina NovaSeq X"
            },
            {
              "@value": "Illumina NovaSeq 6000"
            },
            {
              "@value": "NextSeq 500"
            },
            {
              "@value": "NextSeq 550"
            },
            {
              "@value": "NextSeq 1000"
            },
            {
              "@value": "NextSeq 2000"
            },
            {
              "@value": "unspecified"
            }
          ]
        }
      },
      {
        "@name": "typeHelicosModel",
        "xs:restriction": {
          "@base": "xs:string",
          "xs:enumeration": [
            {
              "@value": "Helicos HeliScope"
            },
            {
              "@value": "unspecified"
            }
          ]
        }
      },
      {
        "@name": "typeAbiSolidModel",
        "xs:restriction": {
          "@base": "xs:string",
          "xs:enumeration": [
            {
              "@value": "AB SOLiD System",
              "xs:annotation": {
                "xs:documentation": "Undifferentiated early AB SOLiD system"
              }
            },
            {
              "@value": "AB SOLiD System 2.0"
            },
            {
              "@value": "AB SOLiD System 3.0"
            },
            {
              "@value": "AB SOLiD 3 Plus System"
            },
            {
              "@value": "AB SOLiD 4 System"
            },
            {
              "@value": "AB SOLiD 4hq System"
            },
            {
              "@value": "AB SOLiD PI System"
            },
            {
              "@value": "AB 5500 Genetic Analyzer"
            },
            {
              "@value": "AB 5500xl Genetic Analyzer"
            },
            {
              "@value": "AB 5500xl-W Genetic Analysis System"
            },
            {
              "@value": "unspecified"
            }
          ]
        }
      },
      {
        "@name": "typeCGModel",
        "xs:restriction": {
          "@base": "xs:string",
          "xs:enumeration": [
            {
              "@value": "Complete Genomics"
            },
            {
              "@value": "unspecified"
            }
          ]
        }
      },
      {
        "@name": "typeBGISEQModel",
        "xs:restriction": {
          "@base": "xs:string",
          "xs:enumeration": [
            {
              "@value": "BGISEQ-50"
            },
            {
              "@value": "BGISEQ-500"
            },
            {
              "@value": "MGISEQ-2000RS"
            }
          ]
        }
      },
      {
        "@name": "typePacBioModel",
        "xs:restriction": {
          "@base": "xs:string",
          "xs:enumeration": [
            {
              "@value": "Onso"
            },
            {
              "@value": "PacBio RS"
            },
            {
              "@value": "PacBio RS II"
            },
            {
              "@value": "Revio"
            },
            {
              "@value": "Sequel"
            },
            {
              "@value": "Sequel II"
            },
            {
              "@value": "Sequel IIe"
            },
            {
              "@value": "unspecified"
            }
          ]
        }
      },
      {
        "@name": "typeIontorrentModel",
        "xs:restriction": {
          "@base": "xs:string",
          "xs:enumeration": [
            {
              "@value": "Ion Torrent PGM"
            },
            {
              "@value": "Ion Torrent Proton"
            },
            {
              "@value": "Ion Torrent S5"
            },
            {
              "@value": "Ion Torrent S5 XL"
            },
            {
              "@value": "Ion Torrent Genexus"
            },
            {
              "@value": "Ion GeneStudio S5"
            },
            {
              "@value": "Ion GeneStudio S5 Prime"
            },
            {
              "@value": "Ion GeneStudio S5 Plus"
            },
            {
              "@value": "unspecified"
            }
          ]
        }
      },
      {
        "@name": "typeCapillaryModel",
        "xs:restriction": {
          "@base": "xs:string",
          "xs:enumeration": [
            {
              "@value": "AB 3730xL Genetic Analyzer"
            },
            {
              "@value": "AB 3730 Genetic Analyzer"
            },
            {
              "@value": "AB 3500xL Genetic Analyzer"
            },
            {
              "@value": "AB 3500 Genetic Analyzer"
            },
            {
              "@value": "AB 3130xL Genetic Analyzer"
            },
            {
              "@value": "AB 3130 Genetic Analyzer"
            },
            {
              "@value": "AB 310 Genetic Analyzer"
            },
            {
              "@value": "unspecified"
            }
          ]
        }
      },
      {
        "@name": "typeDnbSeqModel",
        "xs:restriction": {
          "@base": "xs:string",
          "xs:enumeration": [
            {
              "@value": "DNBSEQ-T7"
            },
            {
              "@value": "DNBSEQ-G400"
            },
            {
              "@value": "DNBSEQ-G50"
            },
            {
              "@value": "DNBSEQ-G400 FAST"
            },
            {
              "@value": "unspecified"
            }
          ]
        }
      },
      {
        "@name": "typeOxfordNanoporeModel",
        "xs:restriction": {
          "@base": "xs:string",
          "xs:enumeration": [
            {
              "@value": "MinION"
            },
            {
              "@value": "GridION"
            },
            {
              "@value": "PromethION"
            },
            {
              "@value": "unspecified"
            }
          ]
        }
      },
      {
        "@name": "typeElementModel",
        "xs:restriction": {
          "@base": "xs:string",
          "xs:enumeration": [
            {
              "@value": "Element AVITI"
            },
            {
              "@value": "unspecified"
            }
          ]
        }
      },
      {
        "@name": "typeUltimaModel",
        "xs:restriction": {
          "@base": "xs:string",
          "xs:enumeration": [
            {
              "@value": "UG 100"
            },
            {
              "@value": "unspecified"
            }
          ]
        }
      }
    ]
  }
}
